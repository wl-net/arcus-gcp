apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: driver-services
  name: driver-services
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: driver-services
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: driver-services
    spec:
      containers:
      - envFrom:
          - configMapRef:
              name: cluster-config
        env:
        - name: JAVA_OPTS
          value: "-Xms64m -Xmx1024m -Dlogback.configurationFile=/config/logback.xml"
        - name: DRIVER_POOL_SIZE
          value: "10"
        - name: BILLING_URL
          valueFrom:
            configMapKeyRef:
              key: BILLING_URL
              name: arcus-config
        - name: BILLING_API_KEY
          valueFrom:
            secretKeyRef:
              key: billing.api.key
              name: shared
        - name: IRIS_AES_SECRET
          valueFrom:
            secretKeyRef:
              key: iris.aes.secret
              name: shared
        - name: IRIS_AES_IV
          valueFrom:
            secretKeyRef:
              key: iris.aes.iv
              name: shared
        - name: QUESTIONS_AES_SECRET
          valueFrom:
            secretKeyRef:
              key: questions.aes.secret
              name: shared
        - name: REDIRECT_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: REDIRECT_BASE_URL
              name: arcus-config              
        image: gcr.io/arcus-238802/arcus/driver-services:2019.10.0
        imagePullPolicy: Always
        name: driver-services
        volumeMounts:
          - mountPath: /config
            name: config
        resources:
          limits:
            cpu: "1"
            memory: "2048Mi"
          requests:
            cpu: "100m"
            memory: "768Mi"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 90
          periodSeconds: 60
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: extrafiles
          items:
          - key: logback.xml
            path: logback.xml
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: driver-services
  name: driver-services
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 9100
    name: metrics
    protocol: TCP
    targetPort: 9100
  selector:
    app: driver-services
  sessionAffinity: None
  type: NodePort
