apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: metrics-server
  name: metrics-server
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: metrics-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: metrics-server
    spec:
      containers:
      - envFrom:
          - configMapRef:
              name: cluster-config
        env:
        - name: JAVA_OPTS
          value: "-Xms64m"
        - name: cassandra_contactPoints
          valueFrom:
            configMapKeyRef:
              key: CASSANDRA_CONTACTPOINTS
              name: arcus-config
        - name: cassandra_history_contactPoints
          valueFrom:
            configMapKeyRef:
              key: CASSANDRA_CONTACTPOINTS
              name: arcus-config
        - name: CASSANDRA_KEYSPACE
          valueFrom:
            configMapKeyRef:
              key: CASSANDRA_KEYSPACE
              name: arcus-config
        - name: BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              key: BOOTSTRAP_SERVERS
              name: arcus-config
              name: arcus-config
        - name: OPS_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              key: OPS_BOOTSTRAP_SERVERS
              name: arcus-config
        - name: KAIROS_URL
          value: http://kairosdb-service.default.svc.cluster.local:8080
        - name: rollup_defaultTTL
          value: '3600'
        - name: rollup_mediumTTL
          value: '7200'
        - name: rollup_highTTL
          value: '86400'
        image: gcr.io/arcus-238802/arcus/metrics-server:2019.10.0
        imagePullPolicy: Always
        name: metrics-server
        resources:
          limits:
            cpu: "1"
          requests:
            cpu: "0.05"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
